#!/usr/bin/env python3
"""
–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç 17: SGD vs GD —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –≥–µ—Å—Å–∏–∞–Ω–æ–≤
1) –û–±—É—á–∏—Ç—å 4 –º–æ–¥–µ–ª–∏: SGD+GD √ó lr(0.1, 0.01) –¥–æ —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏
2) –î–ª—è –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ SGD —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≥–µ—Å—Å–∏–∞–Ω–æ–≤
3) –ì—Ä–∞—Ñ–∏–∫–∏ —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–µ–π –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ SGD
"""

import subprocess
import sys
import os

def run_command(cmd, description):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"\n{'='*60}")
    print(f"üöÄ {description}")
    print(f"{'='*60}")
    
    try:
        result = subprocess.run(cmd, check=True)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        return False

def main():
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤
    learning_rates = [0.1, 0.01]  # 1e-1, 1e-2
    optimizers = ['sgd', 'gd']
    batch_size = 64
    
    base_dir = os.path.dirname(os.path.abspath(__file__))
    train_script = os.path.join(base_dir, "exp17_train_to_plateau.py")
    continue_script = os.path.join(base_dir, "exp17_continue_and_log.py")
    
    print("üî¨ –≠–ö–°–ü–ï–†–ò–ú–ï–ù–¢ 17: SGD vs GD —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –≥–µ—Å—Å–∏–∞–Ω–æ–≤")
    print(f"üìä Learning rates: {learning_rates}")
    print(f"üîß Optimizers: {optimizers}")
    print(f"üì¶ Batch size: {batch_size}")
    print("\nüìã –ü–ª–∞–Ω:")
    print("1) –û–±—É—á–∏—Ç—å 4 –º–æ–¥–µ–ª–∏ –¥–æ —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏ (SGD+GD √ó 2 lr)")
    print("2) –î–ª—è –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å SGD + –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ—Å—Å–∏–∞–Ω–æ–≤")
    print("3) –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ —Å –ª–∏–Ω–∏–µ–π –ø–µ—Ä–µ—Ö–æ–¥–∞")
    
    success_count = 0
    total_tasks = len(learning_rates) * len(optimizers) * 2  # 4 –æ–±—É—á–µ–Ω–∏—è + 4 –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
    
    # –≠—Ç–∞–ø 1: –û–±—É—á–µ–Ω–∏–µ –¥–æ –ø–ª–∞—Ç–æ –≤—Å–µ—Ö 4 –º–æ–¥–µ–ª–µ–π
    print(f"\n{'='*60}")
    print("üìö –≠–¢–ê–ü 1: –û–±—É—á–µ–Ω–∏–µ –¥–æ –ø–ª–∞—Ç–æ")
    print(f"{'='*60}")
    
    for lr in learning_rates:
        for optimizer in optimizers:
            experiment_name = f"{optimizer.upper()}_lr{lr}"
            
            train_cmd = [
                sys.executable, train_script,
                "--lr", str(lr),
                "--batch-size", str(batch_size),
                "--optimizer", optimizer,
                "--max-epochs", "1000",
                "--save-dir", "data/checkpoints/exp17"
            ]
            
            if run_command(train_cmd, f"–û–±—É—á–µ–Ω–∏–µ –¥–æ –ø–ª–∞—Ç–æ: {experiment_name}"):
                success_count += 1
                print(f"‚úÖ {experiment_name}: –ú–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞")
            else:
                print(f"‚ùå {experiment_name}: –û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è")
    
    # –≠—Ç–∞–ø 2: –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å SGD –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–∏
    print(f"\n{'='*60}")
    print("üîç –≠–¢–ê–ü 2: –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å SGD + –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ—Å—Å–∏–∞–Ω–æ–≤")
    print(f"{'='*60}")
    
    for lr in learning_rates:
        for source_optimizer in optimizers:
            experiment_name = f"{source_optimizer.upper()}_lr{lr} ‚Üí SGD"
            
            continue_cmd = [
                sys.executable, continue_script,
                "--lr", str(lr),
                "--batch-size", str(batch_size),
                "--source-optimizer", source_optimizer,
                "--post-plateau-steps", "500",
                "--save-dir", "data/checkpoints/exp17"
            ]
            
            if run_command(continue_cmd, f"–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≥–µ—Å—Å–∏–∞–Ω–æ–≤: {experiment_name}"):
                success_count += 1
                print(f"‚úÖ {experiment_name}: –ì–µ—Å—Å–∏–∞–Ω—ã –∑–∞–ø–∏—Å–∞–Ω—ã")
            else:
                print(f"‚ùå {experiment_name}: –û—à–∏–±–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print(f"\n{'='*80}")
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –≠–ö–°–ü–ï–†–ò–ú–ï–ù–¢–ê 17")
    print(f"{'='*80}")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {success_count}/{total_tasks}")
    print(f"‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫: {total_tasks - success_count}")
    
    if success_count == total_tasks:
        print("\nüéâ –í—Å–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìà –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
        print("   üèÜ 4 –æ–±—É—á–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ (SGD+GD √ó 2 lr)")
        print("   üìä 4 –Ω–∞–±–æ—Ä–∞ –≥–µ—Å—Å–∏–∞–Ω–æ–≤ (–≤—Å–µ ‚Üí SGD)")
        print("   üìà 4 –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –≥—Ä–∞—Ñ–∏–∫–∞ —Å –ª–∏–Ω–∏–µ–π –ø–µ—Ä–µ—Ö–æ–¥–∞")
        print("   üíæ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
    else:
        print(f"\n‚ö†Ô∏è {total_tasks - success_count} –∑–∞–¥–∞—á –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
    
    print(f"\nüìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: data/checkpoints/exp17/")
    print("üî¨ –ì–æ—Ç–æ–≤–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä–æ–≤ –Ω–∞ –ø–ª–∞—Ç–æ!")

if __name__ == "__main__":
    main()